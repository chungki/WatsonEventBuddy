[{"id":"e5ce1770.8163a8","type":"tab","label":"TicketBuddy Flow","disabled":false,"info":""},{"id":"c0751680.8776a8","type":"http in","z":"e5ce1770.8163a8","name":"Request","url":"/api/message","method":"post","upload":false,"swaggerDoc":"","x":60,"y":60,"wires":[["ea5fa8f1.c63668"]]},{"id":"ea5fa8f1.c63668","type":"function","z":"e5ce1770.8163a8","name":"Prep Input Message","func":"//kicks off WCS\nif(msg.payload.input){\n    if(msg.payload.input.text){\n        msg.payload = msg.payload.input.text;\n        \n    }else{\n        msg.payload = \"Hi\";\n    }\n}\nelse{\n    msg.payload = \"Hi\";\n}\nreturn msg;","outputs":1,"noerr":0,"x":120,"y":140,"wires":[["95e3dad7.35e218"]]},{"id":"95e3dad7.35e218","type":"watson-conversation-v1","z":"e5ce1770.8163a8","name":"WCS - CONVO","workspaceid":"","multiuser":false,"context":true,"empty-payload":false,"default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/conversation/api","x":320,"y":140,"wires":[["d991b3c0.f064"]]},{"id":"3f9a8ee0.f2f842","type":"http response","z":"e5ce1770.8163a8","name":"","statusCode":"","headers":{},"x":397,"y":348,"wires":[]},{"id":"96831029.a1345","type":"switch","z":"e5ce1770.8163a8","name":"What action","property":"convdata.output.action","propertyType":"msg","rules":[{"t":"eq","v":"MLoutput","vt":"str"},{"t":"eq","v":"ticketmaster","vt":"str"},{"t":"eq","v":"textUser","vt":"str"},{"t":"else"}],"checkall":"false","outputs":4,"x":650,"y":140,"wires":[["564aee0d.736","56be180e.0ab0c8"],["e71b4de3.287d1","15be0c69.344ce4"],["778ef719.f271c8"],["3f9a8ee0.f2f842","e2db8155.a899d"]]},{"id":"564aee0d.736","type":"function","z":"e5ce1770.8163a8","name":"Set Headers for Authorization - SparkML","func":"//Setting headers for ML Authorization\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\n\n//Setting variables based upon user's input\nglobal.set(\"age\",parseInt(msg.payload.context.age));\nglobal.set(\"city\",msg.payload.context.city);\nglobal.set(\"gender\",msg.payload.context.gender);\nglobal.set(\"mstatus\",msg.payload.context.mstatus);\nglobal.set(\"profession\",msg.payload.context.profession);\nreturn msg;\n\n","outputs":1,"noerr":0,"x":820,"y":60,"wires":[["3d80b90c.696a56"]]},{"id":"3d80b90c.696a56","type":"http request","z":"e5ce1770.8163a8","name":"WML - Get Auth Key - SparkML","method":"GET","ret":"obj","url":"https://ibm-watson-ml.mybluemix.net/v3/identity/token","tls":"","x":1130,"y":60,"wires":[["a91513c8.4df76"]]},{"id":"28fdcc6.1254334","type":"http request","z":"e5ce1770.8163a8","name":"WML - SparkML","method":"POST","ret":"obj","url":"","tls":"","x":880,"y":120,"wires":[["21a4b4c.135754c"]]},{"id":"a91513c8.4df76","type":"function","z":"e5ce1770.8163a8","name":"Set Body and Headers for Score","func":"//authentication needed for ML Service\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['Authorization'] = 'Bearer ' + msg.payload.token;\n\n//passing variables into the ML model. The model will predict what type of event (sports, arts, music etc) the user will like\nmsg.payload = {\n  \"fields\": [\"AGE\", \"GENDER\", \"MARITAL_STATUS\", \"PROFESSION\", \"MARKET\"],\n  \"values\": [\n    \t\t\t[global.get(\"age\"), global.get(\"gender\"), global.get(\"mstatus\"), global.get(\"profession\"), global.get(\"city\")]\n            ]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":1410,"y":60,"wires":[["28fdcc6.1254334"]]},{"id":"21a4b4c.135754c","type":"function","z":"e5ce1770.8163a8","name":"Parse SparkML Output","func":"//parsing output from ML Model\nx = {};\n\nfor (i = 0; i < msg.payload.fields.length; i++){\n    x[msg.payload.fields[i]] = msg.payload.values[0][i]; \n}\n\nmsg.payload = x;\nreturn msg;","outputs":1,"noerr":0,"x":1090,"y":120,"wires":[["5fb093f7.b29fac"]]},{"id":"5fb093f7.b29fac","type":"function","z":"e5ce1770.8163a8","name":"Combine ML Output with Conversation Response","func":"//Conversation Input\nif (msg.topic == \"conversation\"){\n    context.convo_response = msg.payload;\n} \n//ML Input\nelse{\n    context.ml_output = msg.payload;\n     //Saving output for later input into ticketmaster API call\n    global.set(\"MLEvent\",context.ml_output.nodeADP_class);\n}\n\n//Both inputs have arrived\nif (context.ml_output && context.convo_response){\n\n    msg.payload= context.convo_response.output.text[0] + \" \" + context.ml_output.nodeADP_class + \" event. Do you like it?\";\n    \n    //Clear for the next time through.    \n    context.ml_output = null;\n    context.convo_response = null;\n    \n} \n//Only one input has arrived. Do not pass along a message yet\nelse {\n    return null;\n}\nmsg.convdata.output.text[0]=msg.payload;\nmsg.payload=msg.convdata ;\n\nreturn msg;   \n\n","outputs":1,"noerr":0,"x":1430,"y":160,"wires":[["a027077e.b79458","1368da65.b48846"]]},{"id":"56be180e.0ab0c8","type":"function","z":"e5ce1770.8163a8","name":"Keep Watson Conversation Information","func":"msg.topic = \"conversation\"\nreturn msg;","outputs":1,"noerr":0,"x":1040,"y":200,"wires":[["5fb093f7.b29fac"]]},{"id":"d991b3c0.f064","type":"function","z":"e5ce1770.8163a8","name":"After WCS","func":"conv_data = {};\nconv_data = msg.payload;\nmsg.convdata = conv_data;\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":140,"wires":[["96831029.a1345"]]},{"id":"15be0c69.344ce4","type":"function","z":"e5ce1770.8163a8","name":"Set headers for TicketMaster","func":"apikey=\"<Input Your API Key>\";\n\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\n\n//Logic for assigning dmaID for a city for Ticketmaster API call\ncity = msg.payload.context.city.toLowerCase();\nif(city ==\"chicago\"){\n    global.set(\"dmaID\", 249);\n}\nif (city == \"new york\"){\n    global.set(\"dmaID\", 345);\n}\n\n//Logic for arts classification for API call\nclassificationName = global.get(\"MLEvent\").toLowerCase();\nif (classificationName == \"arts\"){\n     global.set(\"MLEvent\",\"Arts & Theatre\");\n}\n\nevent = global.get(\"MLEvent\");\ndmaID = global.get(\"dmaID\");\n\nmsg.payload= \"classificationName=\" + event + \"&dmaId=\" +dmaID+ \"&startDateTime=2017-12-01T00:00:00Z&endDateTime=2017-12-29T11:59:59Z&&apikey=\"+apikey;\n\nreturn msg;","outputs":1,"noerr":0,"x":950,"y":307,"wires":[["6f8e1e.660081e4"]]},{"id":"92bacad0.048d18","type":"http request","z":"e5ce1770.8163a8","name":"Ticketmaster API Call","method":"GET","ret":"obj","url":"https://app.ticketmaster.com/discovery/v2/events.json?{{{query}}}","tls":"","x":1398,"y":297,"wires":[["f3e17adf.75e178"]]},{"id":"f3e17adf.75e178","type":"function","z":"e5ce1770.8163a8","name":"Ticketmaster Output","func":"//parsing list of events from Ticketmaster. Only saving 1st event that is returned\nvar x = [];\nfor (i = 0; i < 1; i++){\n    x.push(msg.payload._embedded.events[i])\n}\n\nmsg.payload = x;\nticketOutput=msg.payload;\n\nreturn msg;\n\n\n\n\n\n","outputs":1,"noerr":0,"x":1624,"y":298,"wires":[["fa1bd721.19e608"]]},{"id":"a027077e.b79458","type":"http response","z":"e5ce1770.8163a8","name":"ML Response","statusCode":"","headers":{},"x":1776,"y":83,"wires":[]},{"id":"756c57ed.5a0788","type":"http response","z":"e5ce1770.8163a8","name":"TicketMaster Response","statusCode":"200","headers":{},"x":1776,"y":349,"wires":[]},{"id":"e71b4de3.287d1","type":"function","z":"e5ce1770.8163a8","name":"Keep Conversation ","func":"msg.topic = \"conversation\"\nreturn msg;","outputs":1,"noerr":0,"x":884,"y":369.25,"wires":[["fa1bd721.19e608"]]},{"id":"fa1bd721.19e608","type":"function","z":"e5ce1770.8163a8","name":"Combine Ticketmaster Output with Conversation Response","func":"//Conversation Input\nif (msg.topic == \"conversation\"){\n    context.convo_response = msg.payload;\n} \n//ML Input\nelse{\n    context.ticket_output = msg.payload;\n}\n\n//Both inputs have arrived\nif (context.ticket_output && context.convo_response){\n\n   \n    //msg.payload= context.convo_response.output.text[0] + \" \" + context.ticket_output\n    msg.payload= context.convo_response.output.text[0] + \": \"+ context.ticket_output[0].name +\". Want me to send you a link to purchase tickets?\";\n    \n    //save event URL\n    global.set(\"eventURL\",context.ticket_output[0].url)\n    \n    //Clear for the next time through.    \n    context.ticket_output = null;\n    context.convo_response = null;\n   \n} \n//Only one input has arrived. Do not pass along a message yet\nelse {\n    return null;\n}\n//This is needed because Watson Conversation looks for \"convdata\"\nmsg.convdata.output.text[0]=msg.payload;\nmsg.payload=msg.convdata;\nreturn msg;","outputs":1,"noerr":0,"x":1286,"y":370,"wires":[["756c57ed.5a0788","8c934d53.68195"]]},{"id":"6f8e1e.660081e4","type":"change","z":"e5ce1770.8163a8","name":"","rules":[{"t":"set","p":"query","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1157,"y":257.75,"wires":[["92bacad0.048d18"]]},{"id":"778ef719.f271c8","type":"function","z":"e5ce1770.8163a8","name":"Text User","func":"//getting the phone number user inputed in from WCS and saving as variable\nglobal.set(\"phoneNum\",msg.payload.context.phoneNum);\n\ncontext.convo_response = msg.payload;\nmsg.payload=context.convo_response.output.text[0];\n\nmsg.convdata.output.text[0]=msg.payload;\nmsg.payload=msg.convdata \n\nreturn msg;","outputs":1,"noerr":0,"x":840.5,"y":475.75,"wires":[["eeaa176d.7f6da8","f30f4b03.db33e8","c1362d66.0d73"]]},{"id":"eeaa176d.7f6da8","type":"http response","z":"e5ce1770.8163a8","name":"","statusCode":"","headers":{},"x":1036.5,"y":450.5,"wires":[]},{"id":"f30f4b03.db33e8","type":"function","z":"e5ce1770.8163a8","name":"Get Event URL Link to Text","func":"eventURL = global.get(\"eventURL\"),\nphoneNum = global.get(\"phoneNum\"),\nmsg.payload = eventURL;\nmsg.topic = \"+1\"+ phoneNum;\nreturn msg;","outputs":1,"noerr":0,"x":1086,"y":514.25,"wires":[["b58f7458.dfa6c8"]]},{"id":"b58f7458.dfa6c8","type":"twilio out","z":"e5ce1770.8163a8","service":"_ext_","twilio":"","from":"","number":"","name":"Text User Event URL","x":1460.5,"y":503.5,"wires":[]},{"id":"416f1729.5cc528","type":"watson-text-to-speech","z":"e5ce1770.8163a8","name":"Text to Speech","lang":"en-US","langhidden":"en-US","langcustom":"NoCustomisationSetting","langcustomhidden":"","voice":"en-US_MichaelVoice","voicehidden":"","format":"audio/wav","password":"","payload-response":false,"default-endpoint":true,"service-endpoint":"https://stream.watsonplatform.net/text-to-speech/api","x":310,"y":415.5,"wires":[["19154f18.523681"]]},{"id":"e2db8155.a899d","type":"function","z":"e5ce1770.8163a8","name":"Set payload ","func":"msg.payload = msg.payload.output.text[0];\nreturn msg;\n","outputs":1,"noerr":0,"x":130.5,"y":415.75,"wires":[["416f1729.5cc528"]]},{"id":"19154f18.523681","type":"function","z":"e5ce1770.8163a8","name":"Set Payload","func":"msg.payload = msg.speech;\nreturn msg;","outputs":1,"noerr":0,"x":492.5,"y":422.75,"wires":[["d342a02e.04256"]]},{"id":"fef85d90.5b888","type":"function","z":"e5ce1770.8163a8","name":"Set Payload","func":"msg.payload = msg.speech;\nreturn msg;","outputs":1,"noerr":0,"x":2165.5,"y":182,"wires":[["e31a2e0e.ee215"]]},{"id":"be54f452.ccd9d8","type":"watson-text-to-speech","z":"e5ce1770.8163a8","name":"","lang":"en-US","langhidden":"en-US","langcustom":"NoCustomisationSetting","langcustomhidden":"","voice":"en-US_MichaelVoice","voicehidden":"","format":"audio/wav","password":"","payload-response":false,"default-endpoint":true,"service-endpoint":"https://stream.watsonplatform.net/text-to-speech/api","x":1960.5,"y":179,"wires":[["fef85d90.5b888"]]},{"id":"1368da65.b48846","type":"function","z":"e5ce1770.8163a8","name":"Set payload ","func":"msg.payload = msg.payload.output.text[0];\nreturn msg;\n","outputs":1,"noerr":0,"x":1768,"y":175,"wires":[["be54f452.ccd9d8"]]},{"id":"8c934d53.68195","type":"function","z":"e5ce1770.8163a8","name":"Set payload ","func":"msg.payload = msg.payload.output.text[0];\nreturn msg;\n","outputs":1,"noerr":0,"x":1746.5,"y":415,"wires":[["f1d8a4f8.2a3d08"]]},{"id":"f1d8a4f8.2a3d08","type":"watson-text-to-speech","z":"e5ce1770.8163a8","name":"","lang":"en-US","langhidden":"en-US","langcustom":"NoCustomisationSetting","langcustomhidden":"","voice":"en-US_MichaelVoice","voicehidden":"","format":"audio/wav","password":"","payload-response":false,"default-endpoint":true,"service-endpoint":"https://stream.watsonplatform.net/text-to-speech/api","x":1940.5,"y":416,"wires":[["9db39fd4.d5a39"]]},{"id":"9db39fd4.d5a39","type":"function","z":"e5ce1770.8163a8","name":"Set Payload","func":"msg.payload = msg.speech;\nreturn msg;","outputs":1,"noerr":0,"x":2125.5,"y":417,"wires":[["49573014.89add"]]},{"id":"c1362d66.0d73","type":"function","z":"e5ce1770.8163a8","name":"Set payload ","func":"msg.payload = msg.payload.output.text[0];\nreturn msg;\n","outputs":1,"noerr":0,"x":965,"y":582,"wires":[["23e64408.6cb4ac"]]},{"id":"23e64408.6cb4ac","type":"watson-text-to-speech","z":"e5ce1770.8163a8","name":"","lang":"en-US","langhidden":"en-US","langcustom":"NoCustomisationSetting","langcustomhidden":"","voice":"en-US_MichaelVoice","voicehidden":"","format":"audio/wav","password":"","payload-response":false,"default-endpoint":true,"service-endpoint":"https://stream.watsonplatform.net/text-to-speech/api","x":1163,"y":581,"wires":[["6ddb0fdd.d9d9f"]]},{"id":"6ddb0fdd.d9d9f","type":"function","z":"e5ce1770.8163a8","name":"Set Payload","func":"msg.payload = msg.speech;\nreturn msg;","outputs":1,"noerr":0,"x":1387.5,"y":581,"wires":[["809a7dac.75a3"]]},{"id":"d342a02e.04256","type":"play audio","z":"e5ce1770.8163a8","name":"","voice":"0","x":663.5,"y":425.5,"wires":[]},{"id":"e31a2e0e.ee215","type":"play audio","z":"e5ce1770.8163a8","name":"","voice":"0","x":2421.5,"y":182,"wires":[]},{"id":"49573014.89add","type":"play audio","z":"e5ce1770.8163a8","name":"","voice":"0","x":2346.5,"y":417,"wires":[]},{"id":"809a7dac.75a3","type":"play audio","z":"e5ce1770.8163a8","name":"","voice":"0","x":1606,"y":579.5,"wires":[]}]